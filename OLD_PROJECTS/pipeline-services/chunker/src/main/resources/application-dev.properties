# suppress inspection "UnusedProperty" for whole file
# ========== CHUNKER SERVICE DEV ENVIRONMENT CONFIGURATION ==========
# This configuration file is for the development environment of the chunker service.
# It configures the service to connect to local instances of Kafka, Apicurio, and Consul.
kafka.enabled=true
consul.client.discovery.enabled=true
micronaut.server.port=60401
micronaut.server.context-path=/chunk
micronaut.server.max-request-size=125829120


#grpc
grpc.server.port=50401
grpc.server.max-inbound-message-size=100000000
grpc.server.max-inbound-metadata-size=100000000
grpc.client.max-inbound-message-size=100000000
grpc.channels.default.max-inbound-message-size=100000000
grpc.server.health.enabled=true
grpc.maxOutboundMessageSize=100000000
grpc.maxInboundMessageSize=100000000


# ========== CHUNKER SERVICE CONFIGURATION ==========
# Chunker service configuration
pipeline.name=chunker-pipeline
pipeline.service.name=chunker-service
pipeline.listen.topics=${pipeline.configs.chunker-pipeline.service.chunker-service.kafka-listen-topics}
# Configure the input and output topics for the chunker service
# The service listens for documents on the "input-documents" topic
# and publishes the chunked documents to the "chunked-documents" topic
pipeline.configs.chunker-pipeline.service.chunker-service.kafka-listen-topics=input-documents
pipeline.configs.chunker-pipeline.service.chunker-service.kafka-publish-topics=chunked-documents
pipeline.configs.chunker-pipeline.service.chunker-service.grpc-forward-to=null

# Chunker specific configuration
# Default chunk size (characters)
pipeline.configs.chunker-pipeline.service.chunker-service.config-params.chunkSize=500
# Default overlap size (characters)
pipeline.configs.chunker-pipeline.service.chunker-service.config-params.overlapSize=50
# Field mappings (comma-separated list of mapping rules)
# If not specified, the PipeDoc body will be used by default
# Example: pipeline.configs.chunker-pipeline.service.chunker-service.config-params.mappings=source.body->target.body,source.title->target.title
# pipeline.configs.chunker-pipeline.service.chunker-service.config-params.mappings=

# ========== CONSUL CONFIGURATION ==========
# Enable Consul client for service discovery and configuration
consul.client.enabled=true
# Consul server address (running on port 8500 as specified in docker-compose.yml)
consul.client.defaultZone=localhost:8500

# Configure Consul for configuration
consul.client.config.enabled=true
consul.client.config.format=properties
consul.client.config.path=config/pipeline

# Enable Consul watch for dynamic updates
consul.client.watch.enabled=true

# ========== KAFKA CONFIGURATION ==========
# Kafka bootstrap servers (running on port 9094 as specified in docker-compose.yml)
kafka.bootstrap.servers=localhost:9094
##NOTE: if running inside the docker container in DEV - make it 9092
#kafka.bootstrap.servers=kafka:9092 #if inside docker


# Kafka consumer configuration
kafka.consumers.chunker-pipe-group.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumers.chunker-pipe-group.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka.consumers.chunker-pipe-group.auto.offset.reset=earliest
kafka.consumers.chunker-pipe-group.group.id=chunker-service-group
kafka.consumers.chunker-pipe-group.session.timeout.ms=30000
kafka.consumers.chunker-pipe-group.enable.auto.commit=true
kafka.consumers.chunker-pipe-group.auto.commit.interval.ms=5000

# Kafka producer configuration
kafka.producers.default.key.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producers.default.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.producers.default.acks=all
kafka.producers.default.retries=3
kafka.producers.default.batch.size=16384
kafka.producers.default.linger.ms=1
kafka.producers.default.buffer.memory=33554432

# ========== APICURIO CONFIGURATION ==========
# Set the schema registry type to apicurio
kafka.schema.registry.type=apicurio

# Apicurio Registry URL (running on port 8080 as specified in docker-compose.yml)
apicurio.registry.url=http://localhost:8080/apis/registry/v3

# Apicurio Registry admin client configuration
# Producer configuration
kafka.producers.default.apicurio.registry.url=http://localhost:8080/apis/registry/v3
kafka.producers.default.apicurio.registry.auto-register=true
kafka.producers.default.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.strategy.TopicIdStrategy
kafka.producers.default.apicurio.registry.artifact-group-id=default

# Consumer configuration
kafka.consumers.default.apicurio.registry.url=http://localhost:8080/apis/registry/v3
kafka.consumers.default.apicurio.registry.auto-register=true
kafka.consumers.default.apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.strategy.TopicIdStrategy
kafka.consumers.default.apicurio.registry.artifact-group-id=default
kafka.consumers.default.apicurio.registry.specific-value-return-class=com.krickert.search.model.PipeStream

# ========== APPLICATION CONFIGURATION ==========
# Application name
micronaut.application.name=pipeline-chunker-service

# Logging configuration
logging.level.com.krickert=DEBUG
