// pipeline-instance-A/build.gradle.kts
plugins {
    id("java")
    alias(libs.plugins.micronaut.application)
    // id("com.google.cloud.tools.jib") version "..."
}

group = rootProject.group
version = rootProject.version

// Repositories inherited from root project
// Java toolchain inherited from root project

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.krickert.search.pipeline.instanceA.*")
    }
    mainClass("com.krickert.search.pipeline.instanceA.Application")
}

dependencies {
    implementation(platform(project(":bom")))
    annotationProcessor(platform(project(":bom")))
    testImplementation(platform(project(":bom")))
    testAnnotationProcessor(platform(project(":bom")))

    // Micronaut dependencies
    annotationProcessor(mn.micronaut.inject.java)
    implementation(mn.micronaut.inject)
    implementation(mn.micronaut.runtime)
    implementation(mn.micronaut.http.server.netty)
    implementation(mn.micronaut.http.client)
    implementation(mn.micronaut.jackson.databind)

    // Project dependencies
    implementation(project(":pipeline-service-core"))

    // Logging implementation
    runtimeOnly(libs.slf4j.simple)

    // Testing
    testImplementation(mn.micronaut.test.junit5) // Micronaut test pulls in JUnit
    // testImplementation(libs.bundles.testing.jvm) // Removed bundle
    testImplementation(project(":pipeline-service-test-utils"))
    testAnnotationProcessor(mn.micronaut.inject.java)
}

application {
    mainClass.set(micronaut.mainClass.get())
}

// Test task configuration inherited from root project