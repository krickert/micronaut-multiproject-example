micronaut:
  application:
    name: consul-config-service
  server:
    port: 61100

  # Caching configuration
#  caches:
#    pipeline-configs:
#      maximum-size: 50 # Smaller cache for testing potentially
#      expire-after-write: 30s # Shorter expiry for testing
#    discovery-client:
#      enabled: false


  # Enable the management endpoints for health checks and refresh
  management:
    endpoints:
      health:
        enabled: true
        details-visible: ANONYMOUS
      refresh:
        enabled: true
        sensitive: false
      swagger-ui:
        enabled: true
        sensitive: false
      openapi:
        enabled: true
        sensitive: false
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      openapi-explorer:
        paths: classpath:META-INF/swagger/views/openapi-explorer
        mapping: /openapi-explorer/**

# Consul client configuration
consul:
  client:
    enabled: true
    config:
      enabled: true
      format: YAML
      path: config/pipeline
    registration:
      check:
        http: true

# Logging configuration
logger:
  levels:
    com.krickert.search.config.consul: INFO
    io.micronaut.discovery: INFO

# Kafka configuration
kafka:
  enabled: true
  consumer:
    dynamic:
      enabled: true
  producer:
    dynamic:
      enabled: true

# Define topic names using custom configuration properties
app:
  kafka:
    topics:
      pipeline-reload: ${PIPELINE_RELOAD_TOPIC:pipeline-reload-events}
      service-reload: ${SERVICE_RELOAD_TOPIC:service-reload-events} # Or pipestep-reload-events
      app-change: ${APP_CHANGE_TOPIC:app-change-events}