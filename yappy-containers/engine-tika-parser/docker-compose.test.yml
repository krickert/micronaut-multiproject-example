version: '3.8'

services:
  # Infrastructure services
  consul:
    image: consul:1.17
    container_name: tika-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: agent -dev -client=0.0.0.0 -log-level=info

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: tika-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: tika-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  apicurio:
    image: apicurio/apicurio-registry-mem:2.4.2.Final
    container_name: tika-apicurio
    ports:
      - "8081:8080"
    environment:
      REGISTRY_AUTH_ANONYMOUS_READ_ACCESS_ENABLED: "true"

  # YAPPY Engine with Tika Parser
  engine-tika-parser:
    image: yappy/engine-tika-parser:${VERSION:-latest}
    container_name: engine-tika-parser
    depends_on:
      - consul
      - kafka
      - apicurio
    ports:
      - "8080:8080"     # Engine HTTP
      - "50051:50051"   # Engine gRPC
      - "50053:50053"   # Tika Parser gRPC
    environment:
      YAPPY_CLUSTER_NAME: tika-test-cluster
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      APICURIO_REGISTRY_URL: http://apicurio:8080
      CONSUL_ENABLED: "true"
      KAFKA_ENABLED: "true"
      SCHEMA_REGISTRY_TYPE: apicurio
      # Tika-specific configuration
      TIKA_MAX_FILE_SIZE: 104857600  # 100MB for testing
      TIKA_TIMEOUT_MS: 120000         # 2 minutes for testing
      TIKA_EXTRACT_METADATA: "true"
      TIKA_EXTRACT_CONTENT: "true"
      TIKA_DETECT_LANGUAGE: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  default:
    name: tika-test-network