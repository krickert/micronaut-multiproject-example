# End-to-end integration test configuration
micronaut:
  application:
    name: yappy-engine-e2e-test
  server:
    port: -1 # Random port for testing

# Consul configuration
consul:
  client:
    enabled: true
    defaultZone: "${CONSUL_HOST:localhost}:${CONSUL_PORT:8500}"
    registration:
      enabled: false # Don't register test instance

# Kafka configuration
kafka:
  enabled: true
  bootstrap:
    servers: "${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}"
  consumers:
    default:
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
  producers:
    default:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
      compression-type: snappy

# Schema Registry
schema:
  registry:
    url: "${SCHEMA_REGISTRY_URL:http://localhost:8081}"

# Engine configuration
app:
  engine:
    instance-id: ${ENGINE_INSTANCE_ID:test-engine-e2e}
    max-slots: 10
    heartbeat-interval-seconds: 5
  
  # Pipeline configuration
  pipeline:
    output-topic: pipeline-output-e2e
    test:
      enabled: true
    dynamic-update:
      enabled: true
      poll-interval: 5s
  
  # Kafka slot management
  kafka:
    slot-management:
      enabled: true
      heartbeat-timeout-seconds: 10
      cleanup-interval-seconds: 5
    
    # Monitoring
    monitoring:
      enabled: true
      max-events: 1000

# Module registration
modules:
  registration:
    enabled: true
    health-check-interval: 10s

# Test-specific configurations
test:
  # Topics to create for testing
  topics:
    - name: pipeline-input
      partitions: 3
      replication-factor: 1
    - name: pipeline-output-e2e
      partitions: 3
      replication-factor: 1
    - name: kafka-slot-rebalancing-events
      partitions: 1
      replication-factor: 1
  
  # Test module configurations
  modules:
    echo:
      port: 50051
      prefix: "ECHO: "
      add-metadata: true
    
    chunker:
      port: 50052
      chunk-size: 1000
      overlap: 100

# Logging
logger:
  levels:
    com.krickert.search.pipeline: DEBUG
    com.krickert.yappy: DEBUG
    io.grpc: INFO
    io.micronaut.configuration.kafka: INFO