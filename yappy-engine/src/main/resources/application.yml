# gRPC configuration
grpc:
  server:
    port: ${GRPC_SERVER_PORT:50050}
    keep-alive-time: 30s
  client:
    plaintext: ${GRPC_CLIENT_PLAINTEXT:true}
    max-retry-attempts: ${GRPC_CLIENT_MAX_RETRY_ATTEMPTS:5}

# Kafka configuration
kafka:
  enabled: true
  producers:
    pipestream-forwarder: # Matches the id in @KafkaClient
      # bootstrap.servers: localhost:9092 # Or your Kafka brokers
      acks: all  # Wait for all in-sync replicas to acknowledge (highest durability)
      retries: 3 # Number of times the producer will retry sending a message on failure
      # delivery.timeout.ms: 120000 # Max time to wait for ack (includes retries), default 2 mins
      # linger.ms: 5 # Batches records for 5ms to improve throughput under load
      # enable.idempotence: true # Ensures exactly-once semantics per partition (requires acks=all, retries>0, max.in.flight.requests.per.connection<=5)
      # max.in.flight.requests.per.connection: 5 # If idempotence is enabled
      # You can add other standard Kafka producer properties here
      # Example: compression.type: snappy

# Application configuration
app:
  kafka:
    slot-management:
      enabled: ${KAFKA_SLOT_MANAGEMENT_ENABLED:false}
      consul:
        # Consul key prefix for slot management
        key-prefix: ${KAFKA_SLOT_CONSUL_PREFIX:yappy/kafka/slots}
        # How often to send heartbeats for acquired slots
        heartbeat-interval: ${KAFKA_SLOT_HEARTBEAT_INTERVAL:30s}
        # Time before a slot without heartbeat is considered expired
        slot-expiration-time: ${KAFKA_SLOT_EXPIRATION_TIME:2m}
      # Maximum slots per engine instance
      max-slots-per-engine: ${KAFKA_MAX_SLOTS_PER_ENGINE:100}

