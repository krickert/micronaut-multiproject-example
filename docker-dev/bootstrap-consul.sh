#!/bin/bash

# Bootstrap Consul with minimal configuration for Yappy DEV environment

echo "Bootstrapping Consul with minimal Yappy configuration..."
cd "$(dirname "$0")" || exit 1

# Check if Consul is running
if ! curl -s "http://localhost:8500/v1/status/leader" | grep -q ":"; then
    echo "Error: Consul is not running. Please start the Docker environment first."
    echo "Run: ./start-dev-env.sh"
    exit 1
fi

# Create minimal cluster configuration
echo "Creating minimal cluster configuration for 'yappy-cluster'..."

# Create a temporary JSON file with the minimal cluster config
cat > /tmp/yappy-cluster-config.json << 'EOF'
{
  "clusterName": "yappy-cluster",
  "pipelineGraphConfig": {
    "pipelines": {
      "default-empty-pipeline": {
        "name": "default-empty-pipeline",
        "pipelineSteps": {}
      }
    }
  },
  "pipelineModuleMap": {
    "availableModules": {
      "echo-v1": {
        "implementationName": "Echo Service",
        "implementationId": "echo-v1",
        "customConfigSchemaReference": null
      },
      "chunker-v1": {
        "implementationName": "Chunker Service",
        "implementationId": "chunker-v1",
        "customConfigSchemaReference": null
      },
      "tika-parser-v1": {
        "implementationName": "Tika Parser Service",
        "implementationId": "tika-parser-v1",
        "customConfigSchemaReference": null
      }
    }
  },
  "defaultPipelineName": "default-empty-pipeline",
  "allowedKafkaTopics": [
    "test-topic",
    "yappy.pipeline.default-empty-pipeline.input",
    "yappy.pipeline.default-empty-pipeline.output"
  ],
  "allowedGrpcServices": [
    "echo-v1",
    "chunker-v1",
    "tika-parser-v1",
    "localhost:50051",
    "localhost:50052",
    "localhost:50053"
  ]
}
EOF

# Store the cluster configuration in Consul
echo "Storing cluster configuration in Consul..."
curl -X PUT \
  -H "Content-Type: application/json" \
  -d @/tmp/yappy-cluster-config.json \
  "http://localhost:8500/v1/kv/yappy/pipeline-configs/clusters/yappy-cluster"

# Verify the configuration was stored
echo ""
echo "Verifying configuration..."
if curl -s "http://localhost:8500/v1/kv/yappy/pipeline-configs/clusters/yappy-cluster?raw" | grep -q "clusterName"; then
    echo "✓ Cluster configuration successfully stored in Consul"
else
    echo "✗ Failed to store cluster configuration"
    exit 1
fi

# Create engine bootstrap properties directory if it doesn't exist
YAPPY_HOME="$HOME/.yappy"
if [ ! -d "$YAPPY_HOME" ]; then
    echo "Creating $YAPPY_HOME directory..."
    mkdir -p "$YAPPY_HOME"
fi

# Create a minimal engine-bootstrap.properties file
echo "Creating engine-bootstrap.properties..."
cat > "$YAPPY_HOME/engine-bootstrap.properties" << EOF
# Yappy Engine Bootstrap Configuration
# Generated by bootstrap-consul.sh on $(date)

# Consul connection details
consul.host=localhost
consul.port=8500

# Active cluster name
app.config.cluster-name=yappy-cluster

# Engine mode
engine.mode=normal
EOF

echo "✓ Created $YAPPY_HOME/engine-bootstrap.properties"

# Clean up
rm -f /tmp/yappy-cluster-config.json

echo ""
echo "Bootstrap complete! The Yappy engine should now be able to start."
echo ""
echo "Next steps:"
echo "1. Update the application name in application-dev-apicurio.yml if needed"
echo "2. Run the engine with: ./run-dev-apicurio.sh"
echo "3. Check the engine logs for successful startup"