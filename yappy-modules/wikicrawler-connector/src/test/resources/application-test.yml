micronaut:
  application:
    name: wikicrawler-connector-test
  server:
    port: -1 # Random port for tests

# Kafka Test Resources Configuration
kafka:
  bootstrap:
    servers: ${kafka.bootstrap.servers} # Provided by Test Resources
  topic:
    wiki:
      article: test-wiki-articles # Specific topic name for testing

# Apicurio Test Resources Configuration (usually picked up automatically if on classpath)
# For explicit configuration if needed:
# apicurio:
#   registry:
#     url: ${apicurio.registry.url} # Provided by Test Resources
#     avro-to-protobuf: true # Example, if needed

# WikiCrawler specific configurations for tests
wikicrawler:
  base-storage-path: "build/tmp/wikicrawler-test-downloads" # Temporary storage for test downloads
  kafka-produce-articles: true # Enable Kafka production for relevant tests

# gRPC client configuration for YappyIngestionService (points to a dummy/test service)
# This might be overridden by specific tests if a mock is used.
grpc:
  channels:
    connector-engine-service:
      address: "static://localhost:9090" # Placeholder, actual test might use a mock gRPC server or TestResources gRPC server
      plaintext: true # Assuming no TLS for test/mock service

# HTTP Client configuration for RawFileDownloaderClient (for tests that might use WireMock or similar)
file:
  download:
    base-url: "http://localhost:${wiremock.server.port}" # Placeholder for WireMock integration

# Ensure Test Resources are enabled (usually default in Micronaut Test)
micronaut.test.resources.enabled: true
