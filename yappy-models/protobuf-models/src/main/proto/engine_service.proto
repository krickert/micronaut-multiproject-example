syntax = "proto3";

package com.krickert.search.engine;

option java_multiple_files = true;
option java_package = "com.krickert.search.engine";
option java_outer_classname = "EngineServiceProto";

import "yappy_core_types.proto"; // This should define com.krickert.search.model.PipeDoc
import "google/protobuf/empty.proto";



// PipeStreamEngine service orchestrates pipeline execution.
service PipeStreamEngine {
  // --- Existing RPCs (can be kept for specific internal/advanced use cases or deprecated over time) ---
  // --- NOTE: a sink has the same signature - the engine controls the outgoing routing, if it's a sink implementation then that will be noted in the step
  rpc testPipeStream(com.krickert.search.model.PipeStream) returns (com.krickert.search.model.PipeStream);
  rpc processPipeAsync(com.krickert.search.model.PipeStream) returns (google.protobuf.Empty);
}

