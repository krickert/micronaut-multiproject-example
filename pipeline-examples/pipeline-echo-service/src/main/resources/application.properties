# ========== ECHO SERVICE CONFIGURATION ==========
# Echo service configuration
pipeline.configs.echo-pipeline.service.echo-service.kafka-listen-topics=echo-input
pipeline.configs.echo-pipeline.service.echo-service.kafka-publish-topics=echo-output
pipeline.configs.echo-pipeline.service.echo-service.grpc-forward-to=null

# ========== CONSUL CONFIGURATION ==========
# Enable Consul client
consul.client.enabled=${CONSUL_ENABLED:false}
# defaultZone will be set dynamically by ConsulContainer in tests
consul.client.defaultZone=${CONSUL_HOST:localhost}:${CONSUL_PORT:8500}

# Configure Consul for configuration
consul.client.config.enabled=${CONSUL_CONFIG_ENABLED:false}
consul.client.config.format=properties
consul.client.config.path=config/pipeline

# Enable Consul watch for dynamic updates
consul.client.watch.enabled=${CONSUL_WATCH_ENABLED:false}

# ========== KAFKA CONFIGURATION ==========
# Kafka configuration
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
kafka.consumers.echo-pipe-group.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumers.echo-pipe-group.value.deserializer=io.micronaut.kafka.serde.ProtobufDeserializer
kafka.producers.default.key.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producers.default.value.serializer=io.micronaut.kafka.serde.ProtobufSerializer

# ========== APPLICATION CONFIGURATION ==========
# Application name
micronaut.application.name=pipeline-echo-service

# Logging configuration
logging.level.com.krickert=INFO