services:
  consul:
    image: hashicorp/consul:1.16
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: agent -server -ui -bootstrap-expect=1 -client=0.0.0.0
    networks:
      - yappy-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    networks:
      - yappy-net

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: apicurio
      POSTGRES_USER: apicurio
      POSTGRES_PASSWORD: apicurio
    networks:
      - yappy-net

  apicurio:
    image: apicurio/apicurio-registry-sql:2.5.1.Final
    ports:
      - "8080:8080"
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: 'jdbc:postgresql://postgres:5432/apicurio'
      QUARKUS_DATASOURCE_USERNAME: apicurio
      QUARKUS_DATASOURCE_PASSWORD: apicurio
    depends_on:
      - postgres
    networks:
      - yappy-net

  # Optional: LocalStack for AWS services (S3, Glue, etc)
  localstack:
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,glue
      - DEBUG=0
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - yappy-net

  # Module containers with debug ports
  tika-parser:
    image: tika-parser:latest
    ports:
      - "50051:50051"  # gRPC port
      - "8081:8081"    # HTTP port
      - "5005:5005"    # Debug port
    environment:
      GRPC_SERVER_PORT: 50051
      GRPC_SERVER_HOST: 0.0.0.0
      MICRONAUT_SERVER_PORT: 8081
      MICRONAUT_SERVER_HOST: 0.0.0.0
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    networks:
      - yappy-net

  chunker:
    image: chunker:latest
    ports:
      - "50052:50051"  # gRPC port
      - "8082:8082"    # HTTP port
      - "5006:5006"    # Debug port
    environment:
      GRPC_SERVER_PORT: 50051
      GRPC_SERVER_HOST: 0.0.0.0
      MICRONAUT_SERVER_PORT: 8082
      MICRONAUT_SERVER_HOST: 0.0.0.0
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    networks:
      - yappy-net

  embedder:
    image: embedder:latest
    ports:
      - "50053:50051"  # gRPC port
      - "8083:8083"    # HTTP port
      - "5007:5007"    # Debug port
    environment:
      GRPC_SERVER_PORT: 50051
      GRPC_SERVER_HOST: 0.0.0.0
      MICRONAUT_SERVER_PORT: 8083
      MICRONAUT_SERVER_HOST: 0.0.0.0
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    networks:
      - yappy-net

  echo:
    image: echo:latest
    ports:
      - "50054:50051"  # gRPC port
      - "8084:8084"    # HTTP port
      - "5008:5008"    # Debug port
    environment:
      GRPC_SERVER_PORT: 50051
      GRPC_SERVER_HOST: 0.0.0.0
      MICRONAUT_SERVER_PORT: 8084
      MICRONAUT_SERVER_HOST: 0.0.0.0
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    networks:
      - yappy-net

  test-module:
    image: test-module:latest
    ports:
      - "50062:50062"  # gRPC port
      - "8085:8085"    # HTTP port
      - "5009:5009"    # Debug port
    environment:
      GRPC_SERVER_PORT: 50062
      GRPC_SERVER_HOST: 0.0.0.0
      MICRONAUT_SERVER_PORT: 8085
      MICRONAUT_SERVER_HOST: 0.0.0.0
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009"
      # Test module specific config
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_PRODUCERS_DEFAULT_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CONSUMERS_DEFAULT_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_ENABLED: true
      APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v3
      KAFKA_PRODUCERS_DEFAULT_APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v3
      KAFKA_CONSUMERS_DEFAULT_APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v3
    networks:
      - yappy-net

networks:
  yappy-net:
    driver: bridge