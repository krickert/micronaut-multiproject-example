version: '3.8'

networks:
  test-network:
    driver: bridge

services:
  # Test infrastructure
  consul:
    image: consul:latest
    container_name: test-consul
    ports:
      - "8500:8500"
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0 -log-level=warn
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Tika Parser - single instance
  tika-parser:
    image: tika-parser:latest
    container_name: test-tika-parser
    depends_on:
      consul:
        condition: service_healthy
    ports:
      - "50053:50053"
    environment:
      GRPC_PORT: 50053
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      SERVICE_NAME: tika-parser
      SERVICE_ID: tika-parser-1
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  # First Chunker - small chunks (300 tokens, 30 overlap)
  chunker-small:
    image: chunker:latest
    container_name: test-chunker-small
    depends_on:
      consul:
        condition: service_healthy
    ports:
      - "50054:50054"
    environment:
      GRPC_PORT: 50054
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      SERVICE_NAME: chunker-small
      SERVICE_ID: chunker-small-1
      # Default config for small chunks
      CHUNKER_DEFAULT_SIZE: 300
      CHUNKER_DEFAULT_OVERLAP: 30
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Second Chunker - large chunks (1000 tokens, 200 overlap)
  chunker-large:
    image: chunker:latest
    container_name: test-chunker-large
    depends_on:
      consul:
        condition: service_healthy
    ports:
      - "50055:50055"
    environment:
      GRPC_PORT: 50055
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      SERVICE_NAME: chunker-large
      SERVICE_ID: chunker-large-1
      # Default config for large chunks
      CHUNKER_DEFAULT_SIZE: 1000
      CHUNKER_DEFAULT_OVERLAP: 200
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  # First Embedder - minilm model
  embedder-minilm:
    image: embedder:latest
    container_name: test-embedder-minilm
    depends_on:
      consul:
        condition: service_healthy
    ports:
      - "50056:50051"  # Map to different external port
    environment:
      GRPC_PORT: 50051  # Internal port stays the same
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      SERVICE_NAME: embedder-minilm
      SERVICE_ID: embedder-minilm-1
      # Use default config (ALL_MINILM_L6_V2)
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Second Embedder - multilingual model
  embedder-multilingual:
    image: embedder:latest
    container_name: test-embedder-multilingual
    depends_on:
      consul:
        condition: service_healthy
    ports:
      - "50057:50051"  # Map to different external port
    environment:
      GRPC_PORT: 50051  # Internal port stays the same
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      SERVICE_NAME: embedder-multilingual
      SERVICE_ID: embedder-multilingual-1
      # Override to use multilingual model
      VECTORIZER_DEFAULT_MODEL: PARAPHRASE_MULTILINGUAL_MINILM_L12_V2
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  consul-data: