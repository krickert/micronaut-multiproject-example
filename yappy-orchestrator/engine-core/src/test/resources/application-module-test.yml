micronaut:
  application:
    name: engine-core-module-test
  server:
    port: -1

# Configure test containers for module services
test-resources:
  containers:
    chunker:
      image-name: chunker:latest
      hostnames:
        - chunker.host
      exposed-ports:
        - chunker.grpc.port: 50051
        - chunker.http.port: 8080
      wait-strategy:
        port:
          port: 50051
      startup-timeout: 60s
      env:
        GRPC_SERVER_PORT: "50051"
        GRPC_SERVER_HOST: "0.0.0.0"
        MICRONAUT_SERVER_PORT: "8080"
        MICRONAUT_SERVER_HOST: "0.0.0.0"
        JAVA_OPTS: "-Xmx1g -Xms1g"
    tika-parser:
      image-name: tika-parser:latest
      hostnames:
        - tika.host
      exposed-ports:
        - tika.grpc.port: 50051
        - tika.http.port: 8080
      wait-strategy:
        port:
          port: 50051
      startup-timeout: 60s
      env:
        GRPC_SERVER_PORT: "50051"
        GRPC_SERVER_HOST: "0.0.0.0"
        MICRONAUT_SERVER_PORT: "8080"
        MICRONAUT_SERVER_HOST: "0.0.0.0"
        JAVA_OPTS: "-Xmx1g -Xms1g"
    embedder:
      image-name: embedder:latest
      hostnames:
        - embedder.host
      exposed-ports:
        - embedder.grpc.port: 50051
      wait-strategy:
        port:
          port: 50051
      startup-timeout: 120s
      env:
        GRPC_SERVER_PORT: "50051"
        GRPC_SERVER_HOST: "0.0.0.0"
        JAVA_OPTS: "-Xmx2g -Xms1g"
    echo:
      image-name: echo:latest
      hostnames:
        - echo.host
      exposed-ports:
        - echo.grpc.port: 50053
        - echo.http.port: 8082
      wait-strategy:
        log:
          regex: ".*GRPC started on port.*"
      startup-timeout: 60s
      env:
        GRPC_SERVER_PORT: "50053"
        GRPC_SERVER_HOST: "0.0.0.0"
        MICRONAUT_SERVER_PORT: "8082"
        MICRONAUT_SERVER_HOST: "0.0.0.0"
    test-module-after-chunker:
      image-name: test-module:latest
      hostnames:
        - test-module-after-chunker.host
      exposed-ports:
        - test-module-after-chunker.grpc.port: 50052
        - test-module-after-chunker.http.port: 8081
      wait-strategy:
        log:
          regex: ".*GRPC started on port.*"
      startup-timeout: 120s
      env:
        GRPC_SERVER_PORT: "50052"
        GRPC_SERVER_HOST: "0.0.0.0"
        MICRONAUT_SERVER_PORT: "8081"
        MICRONAUT_SERVER_HOST: "0.0.0.0"
        KAFKA_ENABLED: "true"

# gRPC client configuration will be injected from test containers
grpc:
  client:
    chunker:
      address: "${chunker.host}:${chunker.grpc.port}"
      plaintext: true
    tika:
      address: "${tika.host}:${tika.grpc.port}"
      plaintext: true
    embedder:
      address: "${embedder.host}:${embedder.grpc.port}"
      plaintext: true
    echo:
      address: "${echo.host}:${echo.grpc.port}"
      plaintext: true
    test-module:
      address: "${test-module-after-chunker.host}:${test-module-after-chunker.grpc.port}"
      plaintext: true

# Logging
logger:
  levels:
    io.micronaut.test: DEBUG
    com.krickert.search.engine.core: DEBUG
    io.micronaut.testresources: DEBUG
    org.testcontainers: INFO

# Yappy configuration  
yappy:
  cluster:
    name: module-test-cluster
  engine:
    buffer:
      enabled: false
      capacity: 100
      precision: 10
      sampleRate: 0.1

# Engine configuration
engine:
  cluster:
    name: module-test-cluster

# App configuration for DynamicConfigurationManager
app:
  config:
    cluster-name: module-test-cluster
    cluster-configs:
      key-prefix: configs/
    schema-versions:
      key-prefix: schema-versions/
    consul:
      key-prefixes:
        pipeline-clusters: configs/
        schema-versions: schema-versions/
      watch-seconds: 1

# Kafka configuration (provided by test-resources)
# This enables Kafka for modules that need it
kafka:
  enabled: true