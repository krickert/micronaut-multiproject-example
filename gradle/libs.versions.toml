# gradle/libs.versions.toml

[versions]
micronautPlatform = "4.8.2"  # For the platform BOM
micronautPlugins = "4.5.3"   # For the Micronaut Gradle plugins
kotlin = "1.9.25"
gradleProtobufPlugin = "0.9.5"
gradleReleasePlugin = "3.1.0"
protobuf = "3.25.7"
proto-common = "2.55.2"
grpc = "1.72.0"
junit = "5.10.0"
slf4j = "2.0.13"
logback = "1.4.14"
jackson = "2.18.3"
guava = "33.4.8-jre"
commonsLang3 = "3.14.0"
amazonGlueSerde = "1.1.23"
amazonMskIamAuth = "2.2.0"
amazonConnection = "2.30.31"
apicurioSerde = "3.0.6"
micronautOpenapi = "5.0.0" # For Micronaut OpenAPI

[libraries]
# Protobuf / gRPC
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-protocGen = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" }
protobufcommon = { module = "com.google.api.grpc:proto-google-common-protos", version.ref = "proto-common" }
protobuf-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf" }

# Testing with explicit versions
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

# Amazon
amazon-glue = { module = "software.amazon.glue:schema-registry-serde", version.ref = "amazonGlueSerde" }
amazon-msk-iam = { module = "software.amazon.msk:aws-msk-iam-auth", version.ref = "amazonMskIamAuth" }
amazon-connection-client = { module = "software.amazon.awssdk:url-connection-client", version.ref = "amazonConnection" }
# Other libraries
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3" }
micronaut-platform = { module = "io.micronaut.platform:micronaut-platform", version.ref = "micronautPlatform" }
apicurio-serde = { module = "io.apicurio:apicurio-registry-protobuf-serde-kafka", version.ref = "apicurioSerde" }
micronaut-inject-java = { module = "io.micronaut:micronaut-inject-java", version.ref = "micronautPlatform" }
lombok = { module = "org.projectlombok:lombok", version = "1.18.30" }
micronaut-validation-processor = { module = "io.micronaut.validation:micronaut-validation-processor", version.ref = "micronautPlatform" }
# Micronaut OpenAPI
micronaut-openapi-visitor = { module = "io.micronaut.openapi:micronaut-openapi-visitor", version.ref = "micronautOpenapi" }
micronaut-openapi-ui = { module = "io.micronaut.openapi:micronaut-openapi-ui", version.ref = "micronautOpenapi" }


[bundles]
testing-jvm = ["junit-jupiter-api", "junit-jupiter-engine"]
micronaut-annotation-processors = ["micronaut-inject-java", "lombok", "micronaut-validation-processor"]

[plugins]
# Update these to use micronautPlugins version
micronaut-application = { id = "io.micronaut.application", version.ref = "micronautPlugins" }
micronaut-library = { id = "io.micronaut.library", version.ref = "micronautPlugins" }
protobuf = { id = "com.google.protobuf", version.ref = "gradleProtobufPlugin" }
release = { id = "net.researchgate.release", version.ref = "gradleReleasePlugin" }
