syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.krickert.search.python";
option java_outer_classname = "GraalpyExample";
option objc_class_prefix = "HLW";

package com.krickert.search.python;

service FibonacciService {
  // Calculate the Fibonacci number for a given position
  rpc CalculateFibonacci (FibonacciRequest) returns (FibonacciResponse) {}

  // Calculate a sequence of Fibonacci numbers up to a given position
  rpc CalculateFibonacciSequence (FibonacciSequenceRequest) returns (FibonacciSequenceResponse) {}
}

message FibonacciRequest {
  int32 position = 1; // The position in the Fibonacci sequence (0-based index)
}

message FibonacciResponse {
  int64 result = 1; // The Fibonacci number at the requested position
}

message FibonacciSequenceRequest {
  int32 length = 1; // The length of the Fibonacci sequence to generate
}

message FibonacciSequenceResponse {
  repeated int64 sequence = 1; // The Fibonacci sequence up to the requested length
}
